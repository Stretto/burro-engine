EXTRA_DIST = z/swig.i
ACLOCAL_AMFLAGS = -I m4 ${ACLOCAL_FLAGS}
AM_MAKEFLAGS = --no-print-directory

# C pre-processor flags, like include directores or preprocessor defines.
AM_CPPFLAGS = \
	-include $(top_builddir)/config.h \
	-DSYSCONFDIR=\""$(sysconfdir)"\" \
	-DLIBEXECDIR=\""$(libexecdir)"\" \
	-I${top_srcdir}/src \
	-Ix

# C compiler flags that aren't pre-processor flags
AM_CFLAGS = ${my_CFLAGS} \
	${DEPS_CFLAGS} \
	${GUILE_CFLAGS} \
	-fvisibility=hidden

# Linker flags
AM_LDFLAGS = \
	${DEPS_LIBS} \
	${GUILE_LIBS} 

# Our main executable
bin_PROGRAMS = burro$(EXEEXT)

# Installed user-callable scripts
# dist_bin_SCRIPTS = 

# Installed program-callable scripts
# dist_pkglibexecdir_SCRIPTS = 

# Non-installed scripts
# noinst_SCRIPTS

# include BUILT_SOURCES and built scripts
CLEANFILES = 

# installed headers
# pkginclude_HEADERS = 

# Architecture-independent data files that are part of the distribution
# dist_pkgdatadir_DATA = 

# Architecture-independent data files that are not part of the distribution.
# but are generated by the build.
# pkgdatadir_DATA = 

# These are the true source files for the executable.
burro_SOURCES = \
	main.c \
	r/resource.c \
	r/resource.h \
	x/xcairo.c \
	x/xcairo.h \
	x/xgdk.c \
	x/xgdk.h \
	x/xgio.c \
	x/xgio.h \
	x/xglib.c \
	x/xglib.h \
	x/xguile.c \
	x/xguile.h \
	x/xgtk.c \
	x/xgtk.h \
	y/bg.c \
	y/bg.h \
	y/draw.c \
	y/draw.h \
	y/eng.c \
	y/eng.h \
	y/io.c \
	y/io.h \
	y/loop.c \
	y/loop.h \
	y/obj.c \
	y/obj.h \
	y/proc.c \
	y/proc.h \
	y/rand.c \
	y/rand.h \
	y/tga.c \
	y/tga.h

nodist_burro_SOURCES = \
	z/guileapi.c \
	g/game.h \
	g/main.scm

# The files in this list are built before anything else and are source
# files generated during the build process.
BUILT_SOURCES = \
	r/resource.c \
	r/resource.h \
	z/guileapi.c \
	g/game.h \
	g/game.scm

ORIG_RESOURCES = \
	r/cga8c.tga

BUILT_RESOURCES = \
	r/cga8c_bmp8.tga \
	r/splash_bmp16.tga \
	r/game.scm

r/game.scm: g/game.scm
	cp g/game.scm r/game.scm

r/cga8c_bmp8.tga: r/cga8c.tga
	targatool --bmp8 cga8c.tga --output cga8c_bmp8.tga

r/resource.h: r/resource.xml $(BUILT_RESOURCES)
	glib-compile-resources --sourcedir=r --generate $< --target=$@

r/resource.c: r/resource.xml $(BUILT_RESOURCES)
	glib-compile-resources --sourcedir=r --generate $< --target=$@

z/guileapi.c: z/swig.i
	swig -guile -o $@ $<

g/game.scm: g/game.scm.m4 g/main.scm
	m4 -P -I g g/game.scm.m4 > $@

g/game.h: g/game.scm
	echo "static char code[] = " > $@
	sed -f $(top_builddir)/tools/c_str_escape.sed $< >> $@
	echo ";" >> $@

# burro_SOURCES =\
# 	x/xcairo.c \
# 	x/xcairo.h \
# 	x/xglib.c \
# 	x/xglib.h \
# 	x/xgdk.c \
# 	x/xgdk.h \
# 	x/xgtk.c \
# 	x/xgtk.h \
# 	x/xpulseaudio.c \
# 	x/xpulseaudio.h \
# 	x/xgio.c \
# 	x/xgio.h \
# 	y/io.c \
# 	y/io.h \
# 	y/tga.c \
# 	y/tga.h \
# 	y/bg.c \
# 	y/bg.h \
# 	y/obj.h \
# 	y/obj.c \
# 	eng_audio.c \
# 	eng_audio.h \
# 	engine.c \
# 	engine_constants.h \
# 	engine.h \
# 	engine_priv.h \
# 	eng_input.h \
# 	eng_state.c \
# 	eng_state.h \
# 	eng_timers.h \
# 	eng_video.c \
# 	eng_video.h \
# 	main.c \
# 	pulseaudio.c \
# 	pulseaudio.h \
# 	socket.c \
# 	extern.c \
# 	commands.c
